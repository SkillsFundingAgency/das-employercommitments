@using SFA.DAS.EmployerCommitments.Web.Extensions
@using SFA.DAS.EmployerCommitments.Web.ViewModels
@model SFA.DAS.EmployerCommitments.Web.OrchestratorResponse<SFA.DAS.EmployerCommitments.Web.ViewModels.ManageApprenticeships.DataLockStatusViewModel>

@{
    ViewBag.Title = "Review changes";
    ViewBag.Section = "apprentices";
    ViewBag.PageId = "review-datalock-changes";

    var learnerName = Model.Data?.LearnerName;
    var uln = Model.Data?.ULN;
    var trainingName = Model.Data?.TrainingName;
}

<div class="grid-row">
    <div class="column-full">
        <h1 class="heading-xlarge">@ViewBag.Title</h1>

        @{ Html.RenderPartial("_CoreDetail", new CoreDetailsViewModel
           {
               LearnerName = learnerName,
               ULN = uln,
               TrainingName = trainingName
           }); }

        <p>@Model.Data.ProviderName has requested these changes:</p>
        @{ var count = 0; }
        @foreach (var dl in Model.Data.CourseChanges)
        {
            count++;

            var ilrPeriod = dl.IlrEndDate.HasValue
                ? $"From {dl.CurrentStartDate.Date.ToGdsFormat()} to {dl.IlrEndDate.Value.ToGdsFormat()}"
                : $"From {dl.CurrentStartDate.Date.ToGdsFormat()} onwards";

            var dasPeriod = $"From {dl.CurrentStartDate.ToGdsFormat()} onwards";

            <h2 class="heading-small">Change @count</h2>
            <table class="changes">
                <thead>
                    <tr>
                        <th></th>
                        <th class="current">Currently</th>
                        <th class="changed">Change to</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Period</td>
                        <td><span>@dasPeriod</span></td>
                        <td>@ilrPeriod</td>
                    </tr>
                    <tr>
                        <td>Apprenticeship training course</td>
                        <td>
                            @dl.CurrentTrainingProgram
                        </td>
                        <td>@dl.IlrTrainingProgram</td>
                    </tr>
                </tbody>
            </table>
        }
        @foreach (var p in Model.Data.PriceChanges)
        {
            count++;

            var ilrPeriod = p.IlrEndDate.HasValue
                ? $"From {p.IlrStartDate.Date.ToGdsFormat()} to {p.IlrEndDate.Value.ToGdsFormat()}"
                : $"From {p.IlrStartDate.Date.ToGdsFormat()} onwards";

            var dasPeriod = p.MissingPriceHistory
                ? string.Empty
                : p.CurrentEndDate.HasValue
                    ? $"From {p.CurrentStartDate.Date.ToGdsFormat()} to {p.CurrentEndDate.Value.ToGdsFormat()}"
                    : $"From {p.CurrentStartDate.ToGdsFormat()} onwards";

            <h2 class="heading-small">Change @count</h2>
            <table class="changes">
                <thead>
                    <tr>
                        <th></th>
                        <th class="current">Currently</th>
                        <th class="changed">Change to</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td>Price period</td>
                        <td><span>@dasPeriod</span></td>
                        <td>@ilrPeriod</td>
                    </tr>
                    <tr>
                        <td>Total apprenticeship training price</td>
                        <td>
                            @{
                                if (!p.MissingPriceHistory)
                                {
                                    <span>@FormatCost(p.CurrentCost)</span>
                                }
                            }
                        </td>
                        <td>@FormatCost(p.IlrCost)</td>
                    </tr>
                </tbody>
            </table>
        }

        <form method="POST" action="@Url.Action("ConfirmRequestChanges", "DataLock")" novalidate="novalidate" id="approve-changes" onsubmit="sfa.tagHelper.submitRadioForm('@ViewBag.Title')">
        @Html.AntiForgeryToken()
            <h3 class="heading-medium">Are you happy to approve these changes?</h3>
            <div class="form-group @(!string.IsNullOrEmpty(Model.Data.ChangesConfirmedError) ? "error" : "")">
                <fieldset>
                    <legend class="visually-hidden">Are you happy to approve these changes?</legend>

                    <div id="ChangesConfirmed"></div>
                    @if (!string.IsNullOrEmpty(Model.Data.ChangesConfirmedError))
                    {
                        <span class="error-message" id="error-message-ChangesConfirmed">@Model.Data.ChangesConfirmedError</span>
                    }

                    <label class="block-label selection-button-radio" for="changes-approve-true">
                        @Html.RadioButton("ChangesConfirmed", true, new { id = "changes-approve-true", dataOptionName = "Yes", onclick = $"sfa.tagHelper.radioButtonClick('{ViewBag.Title}', 'Yes')" })
                        Yes, approve these changes
                    </label>
                    <label class="block-label selection-button-radio" for="changes-approve-false">
                        @Html.RadioButton("ChangesConfirmed", false, new { id = "changes-approve-false", dataOptionName = "No", onclick = $"sfa.tagHelper.radioButtonClick('{ViewBag.Title}', 'No')" })
                        No, reject these changes
                    </label>
                </fieldset>
            </div>
            <button type="submit" class="button" aria-label="Continue" id="submit-req-changes">Continue</button>
            <a class="button-link break-line" href="@Url.Action("Details", "EmployerManageApprentices", new { Model.Data.HashedAccountId, Model.Data.HashedApprenticeshipId })" aria-label="Back to apprentice details">
                Cancel and return
            </a>
            @Html.Hidden("HashedAccountId", Model.Data.HashedAccountId)
            @Html.Hidden("HashedApprenticeshipId", Model.Data.HashedApprenticeshipId)
        </form>
    </div>
</div>



@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Details", "EmployerManageApprentices", new { Model.Data.HashedAccountId, Model.Data.HashedApprenticeshipId} )" aria-label="Back to apprentice details" class="back-link">Back to apprentice details</a>
    </div>
}

@functions {
    public string FormatCost(decimal? cost)
    {
        if (!cost.HasValue)
            return string.Empty;

        return $"£{cost.Value:n0}";
    }
}

@section gaDataLayer {
    <script>
        sfa.dataLayer.vpv = '/accounts/apprentices/manage/review-datalock-changes';
    </script>
}