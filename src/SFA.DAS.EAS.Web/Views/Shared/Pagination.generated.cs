#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SFA.DAS.EmployerCommitments.Web.Views.Shared
{
    using System;
    using System.Collections.Generic;
    using System.IO;
    using System.Linq;
    using System.Net;
    using System.Text;
    using System.Web;
    using System.Web.Helpers;
    using System.Web.Mvc;
    using System.Web.Mvc.Ajax;
    using System.Web.Mvc.Html;
    using System.Web.Optimization;
    using System.Web.Routing;
    using System.Web.Security;
    using System.Web.UI;
    using System.Web.WebPages;
    using SFA.DAS.EmployerCommitments;
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("RazorGenerator", "2.0.0.0")]
    [System.Web.WebPages.PageVirtualPathAttribute("~/Views/Shared/Pagination.cshtml")]
    public partial class Pagination : System.Web.Mvc.WebViewPage<SFA.DAS.EmployerCommitments.Web.ViewModels.Interfaces.IPaginationViewModel>
    {
 
    public string GetLinkForPage(int pageNumber)
    {
        var queryStringValues = HttpUtility.ParseQueryString(Request.QueryString.ToString());

        queryStringValues.Set("pageNumber", pageNumber.ToString());
        queryStringValues.Set("resetFilter", "false");

        return $"{Request.Url.AbsolutePath}?{queryStringValues}";
    }

    public Tuple<int, int> GetPreviousLinkApprenticeshipCounts()
    {
        var lowerValue = (Model.PageNumber - 2) * Model.PageSize + 1;
        int upperValue = (Model.PageNumber - 1) * Model.PageSize;

        return new Tuple<int, int>(lowerValue, upperValue);
    }

    public Tuple<int, int> GetNextLinkApprenticeshipCounts()
    {
        var lowerValue = ((Model.PageNumber) * Model.PageSize) + 1;
        int upperValue;

        if (Model.PageNumber == Model.TotalPages - 1)
        {
            var remainder = Model.TotalResults % Model.PageSize;
            upperValue = remainder == 0 ? Model.TotalResults : (Model.PageSize * (Model.TotalPages - 1)) + remainder;
        }
        else
        {
            upperValue = (Model.PageNumber + 1) * Model.PageSize;
        }

        return new Tuple<int, int>(lowerValue, upperValue);
    }

        public Pagination()
        {
        }
        public override void Execute()
        {
WriteLiteral("\r\n");

  
    var pagePreviousLinkValues = GetPreviousLinkApprenticeshipCounts();
    var pageNextLinkValues = GetNextLinkApprenticeshipCounts();

WriteLiteral("\r\n\r\n<nav");

WriteLiteral(" role=\"navigation\"");

WriteLiteral(">\r\n    <ul");

WriteLiteral(" class=\"previous-next-navigation\"");

WriteLiteral(">\r\n");

        
         if (Model.PageNumber != 1)
        {

WriteLiteral("            <li");

WriteLiteral(" class=\"previous\"");

WriteLiteral(">\r\n                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 1661), Tuple.Create("\"", 1705)
, Tuple.Create(Tuple.Create("", 1668), Tuple.Create<System.Object, System.Int32>(GetLinkForPage(Model.PageNumber - 1)
, 1668), false)
);

WriteLiteral(">\r\n                    Previous <span");

WriteLiteral(" class=\"visuallyhidden\"");

WriteLiteral(">page</span>\r\n                    <span");

WriteLiteral(" class=\"page-numbers\"");

WriteLiteral(">Apprentices ");

                                                      Write(pagePreviousLinkValues.Item1);

WriteLiteral(" to ");

                                                                                       Write(pagePreviousLinkValues.Item2);

WriteLiteral("</span>\r\n                </a>\r\n            </li>\r\n");

        }

WriteLiteral("\r\n");

        
         if (Model.TotalPages > 1 && Model.PageNumber < Model.TotalPages)
        {

WriteLiteral("            <li");

WriteLiteral(" class=\"next\"");

WriteLiteral(">\r\n                <a");

WriteAttribute("href", Tuple.Create(" href=\"", 2099), Tuple.Create("\"", 2143)
, Tuple.Create(Tuple.Create("", 2106), Tuple.Create<System.Object, System.Int32>(GetLinkForPage(Model.PageNumber + 1)
, 2106), false)
);

WriteLiteral(">\r\n                    Next <span");

WriteLiteral(" class=\"visuallyhidden\"");

WriteLiteral(">page</span>\r\n                    <span");

WriteLiteral(" class=\"page-numbers\"");

WriteLiteral(">Apprentices ");

                                                      Write(pageNextLinkValues.Item1);

WriteLiteral(" to ");

                                                                                   Write(pageNextLinkValues.Item2);

WriteLiteral("</span>\r\n                </a>\r\n            </li>\r\n");

        }

WriteLiteral("    </ul>\r\n</nav>\r\n\r\n\r\n");

        }
    }
}
#pragma warning restore 1591
