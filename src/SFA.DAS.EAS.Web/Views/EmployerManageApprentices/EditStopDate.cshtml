@using SFA.DAS.EmployerCommitments.Web
@using SFA.DAS.EmployerCommitments.Web.Extensions
@using SFA.DAS.EmployerCommitments.Web.ViewModels.ManageApprenticeships

@model OrchestratorResponse<EditApprenticeshipStopDateViewModel>
@{
    ViewBag.Title = "When did this apprenticeship training stop?";
    ViewBag.PageId = "edit-stopdate";
    ViewBag.Section = "apprentices";
}

@section pageSpecificJS {
    @Scripts.Render("~/comt-assets/bundles/lengthLimitation")
}

<div class="grid-row">
    <div class="column-two-thirds">
        <form method="post" action="@Url.RouteUrl("PostEditStopDate")" novalidate onsubmit="sfa.tagHelper.submitRadioForm('@ViewBag.Title')">
            @Html.AntiForgeryToken()
            @Html.Partial("ValidationSummary", Html.ViewData.ModelState)

            <div class="form-group">
                <div class="@Html.AddClassIfPropertyInError("NewStopDate","error")">

                    <h1 class="heading-xlarge">@ViewBag.Title</h1>
                    <fieldset>
                        <legend class="visually-hidden" aria-hidden="true">Select stop date</legend>

                        <p>The earliest date you can enter is this apprenticeship's start date of @Model.Data.ApprenticeshipStartDate.ToGdsFormatWithoutDay().  Any outstanding payments will be made for activity up to this date.</p>

                        <p class="text-secondary">For example, 6 2018</p>

                        <div class="form-date">
                            @Html.ValidationMessage("NewStopDate", new { id = "error-message-NewStopDate", @class = "error-message" })
                            <div class="form-group form-group-month">
                                <label for="NewStopDate.Month">
                                    Month
                                </label>
                                @Html.TextBox("NewStopDate.Month", Model.Data.NewStopDate.Month, new { @class = "form-control length-limit " + Html.AddClassIfPropertyInError("NewStopDate", "form-control-error"), type = "number", maxlength = "2", min = "1", max = "12", aria_labelledby = "NewStopDate.Month" })
                            </div>
                            <div class="form-group form-group-year">
                                <label for="NewStopDate.Year">
                                    Year
                                </label>
                                @Html.TextBox("NewStopDate.Year", Model.Data.NewStopDate.Year, new { @class = "form-control length-limit " + Html.AddClassIfPropertyInError("NewStopDate", "form-control-error"), type = "number", maxlength = "4", min = "1900", max = "9999", aria_labelledby = "NewStopDate.Year" })
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
            <button class="button" type="submit" id="submit-apply-change">Save and confirm</button>

            @Html.Hidden("ApprenticeshipName", Model.Data.ApprenticeshipName)
            @Html.Hidden("ApprenticeshipULN", Model.Data.ApprenticeshipULN)
            @Html.Hidden("CurrentStopDate", Model.Data.CurrentStopDate.ToShortDateString())
            @Html.Hidden("EarliestDate", Model.Data.EarliestDate.ToShortDateString())
            @Html.Hidden("AcademicYearRestriction", Model.Data.AcademicYearRestriction)
            @Html.Hidden("ApprenticeshipStartDate", Model.Data.ApprenticeshipStartDate.ToShortDateString())
        </form>
    </div>
</div>

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.RouteUrl("OnProgrammeApprenticeshipDetails")" aria-label="Back to apprentices details" class="back-link">Back</a>
    </div>
}
@section gaDataLayer {
    <script>
        sfa.dataLayer.vpv = '/accounts/apprentices/manage/edit-stop-date'
    </script>
}

