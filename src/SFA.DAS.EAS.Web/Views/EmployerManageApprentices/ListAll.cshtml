@using SFA.DAS.EmployerCommitments.Web.Extensions
@using SFA.DAS.EmployerCommitments.Web

@model OrchestratorResponse<SFA.DAS.EmployerCommitments.Web.ViewModels.ManageApprenticeships.ManageApprenticeshipsViewModel>

@{
    ViewBag.PageID = "manage-all-apprentices";
    ViewBag.Section = "apprentices";
    ViewBag.Title = "Manage your apprentices";
}

<h1 class="heading-xlarge">Manage your apprentices</h1>

@if (Model.Data.TotalApprenticeshipsBeforeFilter == 0)
{
    <div class="grid-row">
        <div class="column-full">
            <div class="panel panel-border-wide alert-default">
                <p>Once you and your training provider have approved a cohort, the apprentices from that cohort will appear here.</p>
            </div>
        </div>
    </div>
}
else
{
    <div class="grid-row">
        <div class="column-one-third">
            <!--Search bar-->
            <div id="search-app">
                <form id="search-form" method="get" action="@Url.Action("ListAll")">
                    <fieldset class="inline">
                        <legend><h2 class="heading-medium">Search for an apprentice</h2></legend>
                        <input type="text" id="search-input" name="SearchInput" class="search-text form-control" data-default-value="@Model.Data.SearchInputPlaceholder" value="@Model.Data.Filters.SearchInput" />
                        <input type="submit" class="submit-search form-control" />
                        <input name="ResetFilter" type="hidden" value="True">
                    </fieldset>
                </form>
            </div>
            <hr class="black" />
            <h2 class="heading-medium filter-app-head">Filter apprentices</h2>

            <form method="GET" action="@Url.Action("ListAll")" novalidate="novalidate">
                @Html.Partial("ApprenticeshipFilters", Model.Data.Filters)
                <button type="submit" class="button" value="Filter" id="submit-app-filter">Filter apprentices</button>
                <p>
                    <a href="@Url.Action("ListAll")" title="Reset" class="button text-link reset-link">Reset</a>
                </p>
                @Html.Hidden("SearchInput", Model.Data.Filters.SearchInput)
                <input name="ResetFilter" type="hidden" value="False">
            </form>
        </div>

        <div class="column-two-thirds">

            @if (Model.Data.TotalResults == 0)
            {
                <div id="no-search-results">
                    <h3 class="heading-small">No results found.</h3>
                        <p>
                            You can search again or <a href="@Url.Action("ListAll")" title="see all apprentices" class="text-link">see all apprentices</a>
                        </p>           
                </div>
            }
            else
            {

                <table class="tableResponsive">
                    <thead>
                        <tr>
                            <th>Name</th>
                            <th>Unique leaner number</th>
                            <th>Date of birth</th>
                            <th>Status</th>
                            <th>Alerts</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var apprenticeship in Model.Data.Apprenticeships)
                        {
                            <tr>
                                <td>
                                    @apprenticeship.FirstName @apprenticeship.LastName &nbsp;
                                </td>
                                <td>@apprenticeship.ULN</td>
                                <td>
                                    @if (apprenticeship.DateOfBirth != null)
                                    {
                                        @apprenticeship.DateOfBirth.Value.ToGdsFormat()
                                    } &nbsp;
                                </td>
                                <td>
                                    @apprenticeship.Status &nbsp;
                                </td>
                                <td>
                                    @foreach (var a in apprenticeship.Alerts)
                                    {
                                        <div>
                                            @a
                                        </div>
                                    }
                                </td>
                                <td>
                                    <a href="@Url.Action("Details", new {Model.Data.HashedAccountId, hashedApprenticeshipId = apprenticeship.HashedApprenticeshipId})"
                                       title="View  @apprenticeship.FirstName @apprenticeship.LastName"
                                       aria-label="View @apprenticeship.FirstName @apprenticeship.LastName">View</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

                    @Html.Partial("Pagination", Model.Data)
            }
        </div>
    </div>
}

@section breadcrumb {
    <div class="breadcrumbs">
        <a href="@Url.Action("Index", "EmployerCommitments")" aria-label="Back to apprentices" class="back-link">Back to apprentices</a>
    </div>
}

@section gaDataLayer {
    <script>
        sfa.dataLayer.vpv = '/accounts/apprentices/manage/list-all-apprentices';
        sfa.dataLayer.statuses = '@Model.Data.Filters.Status.Count';
        sfa.dataLayer.alerts = '@Model.Data.Filters.RecordStatus.Count';
        sfa.dataLayer.courses = '@Model.Data.Filters.Course.Count';
        sfa.dataLayer.providers = '@Model.Data.Filters.Provider.Count';
    </script>
}

